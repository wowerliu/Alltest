v-bind
缩写：:
预期：any (with argument) | Object (without argument)
参数：attrOrProp (optional)
修饰符： 
.prop - 被用于绑定 DOM 属性。
.camel - (2.1.0+) 将 kebab-case 特性名转换为 camelCase.
.sync (2.3.0+) 语法糖，会扩展成一个更新父组件绑定值的 v-on 侦听器。
用法： 
动态地绑定一个或多个特性，或一个组件 prop 到表达式。 
在绑定 class 或 style 特性时，支持其它类型的值，如数组或对象。可以通过下面的教程链接查看详情。 
在绑定 prop 时，prop 必须在子组件中声明。可以用修饰符指定不同的绑定类型。 
没有参数时，可以绑定到一个包含键值对的对象。注意此时 class 和 style 绑定不支持数组和对象。



v-on
缩写：@
预期：Function | Inline Statement | Object
参数：event
修饰符： 
.stop - 调用 event.stopPropagation()。
.prevent - 调用 event.preventDefault()。
.capture - 添加事件侦听器时使用 capture 模式。
.self - 只当事件是从侦听器绑定的元素本身触发时才触发回调。
.{keyCode | keyAlias} - 只当事件是从特定键触发时才触发回调。
.native - 监听组件根元素的原生事件。
.once - 只触发一次回调。
.left - (2.2.0) 只当点击鼠标左键时触发。
.right - (2.2.0) 只当点击鼠标右键时触发。
.middle - (2.2.0) 只当点击鼠标中键时触发。
.passive - (2.3.0) 以 { passive: true } 模式添加侦听器
用法： 
绑定事件监听器。事件类型由参数指定。表达式可以是一个方法的名字或一个内联语句，如果没有修饰符也可以省略。 
从 2.4.0 开始，v-on 同样支持不带参数绑定一个事件/监听器键值对的对象。注意当使用对象语法时，是不支持任何修饰器的。 
用在普通元素上时，只能监听 原生 DOM 事件。用在自定义元素组件上时，也可以监听子组件触发的自定义事件。 
在监听原生 DOM 事件时，方法以事件为唯一的参数。如果使用内联语句，语句可以访问一个 $event 属性：v-on:click="handle('ok', $event)"。



单向数据流， 父组件可以通过属性的形式随意传递参数，子组件通过增加prop的方式进行接收,但是子组件不能随意修改props 的值，对于引用型的调整了值之后
可能会影响其他子组件的调用，所以必须定义一个data对应的变量，通过函数return 一个副本变量，从而子组件引用的变量和修改的值都是
使用这个副本变量。
子组件定义data： 必须是通过函数的形式，而不能是对象。   不同于根组件，只会调用一次。 但是子组件在不同的地方可能会调用多次
，每个子组件可能都需要自己的数据，不应该共享一套数据，通过函数的形式，能保证子组件能有独立的数据存储。

应用（references）  ref的使用 获取dom节点进而相关操作
1、 通过标签增加ref  ，获取它的dom元素节点，进行可以使用 this.$refs.one.innerHTML
2.  通过自定义组件增加ref，会获取它的引用 ，进行可以使用 this.$refs.one.相关变量

通过IS 属性关键字，可调整Vue  不满足H5规范的bug


props特性： 不会显示在dom元素标签属性中
非props特性： 父组件向子组件传递一个属性，但是子组件未通过定义props引用 ，会显示在dom元素标签属性中